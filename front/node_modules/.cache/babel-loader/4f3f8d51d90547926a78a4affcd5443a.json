{"ast":null,"code":"var _jsxFileName = \"/home/whiteknight/Desktop/capstone/OldCapstoneProject/front/src/components/ResetPassword/VerifyUserForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport styled from \"styled-components\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { device } from \"../../styles/devices\";\nimport { routes } from '../../util/config'; //import { useHistory } from \"react-router-dom\";\n\nimport { Row, Col } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledForm = styled(Form)`\n  margin: auto;\n  padding-top: 5%;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptopL} {\n    font-size: 16px; \n  }\n`;\n_c = StyledForm;\nconst StyledInput = styled(Form.Group)`\n  // These are no longer needed but keeping in case we want to re-style inputs.\n  @media ${device.mobileS} {\n    width: 100%;\n  }\n  @media ${device.laptopL} {\n    width: 100%;\n  }\n`;\n_c2 = StyledInput;\nconst StyledText = styled(Form.Group)`\n  @media ${device.mobileS} {\n    width: 100%;\n    color: white;\n    text-align: center;\n  }\n  @media ${device.laptopL} {\n    width: 100%;\n    color: white;\n    text-align: center;\n  }\n`;\n_c3 = StyledText;\nconst StyledLabel = styled(Form.Label)`\n  color: white;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptopL} {\n    font-size: 16px;\n  }\n`;\n_c4 = StyledLabel;\nconst StyledUpdateButton = styled(Button)` \n@media ${device.mobileS} {\n  font-size: 14px;\n}\n\n@media ${device.laptopL} {\n  font-size: 16px;\n}\n`;\n_c5 = StyledUpdateButton;\nexport const VerifyUserForm = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [verified, setVerified] = useState(false); //const history = useHistory();\n\n  function validateUserFields() {\n    return username.length > 0 && email.length > 0; //makes sure the user enters something in each field\n  }\n\n  function handleVerifyUser(event) {\n    event.preventDefault();\n    const userInfo = {\n      username: username,\n      email: email\n    };\n\n    const sendVerifyInfoRequest = async () => {\n      try {\n        const resp = await axios.post(routes.verifyUser, userInfo);\n        console.log(resp.data);\n\n        if (resp.data === \"Success\") {\n          alert(\"Follow the link sent to your email to reset your password\");\n          setVerified(true); //history.push(\"/reset/resetPassword\");\n        } else if (resp.data === \"Failed\") {\n          alert(\"Invalid username or email\");\n        }\n      } catch (err) {\n        alert(\"Reset Password failed\"); //Handle Error Here\n\n        console.error(err);\n      }\n    };\n\n    sendVerifyInfoRequest();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VerifyUser\",\n    children: [!verified && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledForm, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            xs: 6,\n            md: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            xs: 12,\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(StyledInput, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"username\",\n                children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  autoFocus: true,\n                  required: true,\n                  type: \"text\",\n                  value: username,\n                  onChange: e => setUsername(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 20\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            xs: 6,\n            md: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            xs: 6,\n            md: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            xs: 12,\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(StyledInput, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"email\",\n                children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 16\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  type: \"email\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 16\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            xs: 6,\n            md: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(StyledUpdateButton, {\n          variant: \"success\",\n          type: \"button\",\n          disabled: !validateUserFields(),\n          onClick: handleVerifyUser,\n          children: \"Verify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true), verified && /*#__PURE__*/_jsxDEV(StyledForm, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(StyledText, {\n            children: \"You can now close this page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n\n_s(VerifyUserForm, \"uDnWfLWP0wu0F5sZYT0kGKwqm0o=\");\n\n_c6 = VerifyUserForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"StyledForm\");\n$RefreshReg$(_c2, \"StyledInput\");\n$RefreshReg$(_c3, \"StyledText\");\n$RefreshReg$(_c4, \"StyledLabel\");\n$RefreshReg$(_c5, \"StyledUpdateButton\");\n$RefreshReg$(_c6, \"VerifyUserForm\");","map":{"version":3,"sources":["/home/whiteknight/Desktop/capstone/OldCapstoneProject/front/src/components/ResetPassword/VerifyUserForm.tsx"],"names":["React","useState","axios","styled","Form","Button","device","routes","Row","Col","StyledForm","mobileS","laptopL","StyledInput","Group","StyledText","StyledLabel","Label","StyledUpdateButton","VerifyUserForm","username","setUsername","email","setEmail","verified","setVerified","validateUserFields","length","handleVerifyUser","event","preventDefault","userInfo","sendVerifyInfoRequest","resp","post","verifyUser","console","log","data","alert","err","error","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, SyntheticEvent } from \"react\";\nimport axios from 'axios';\nimport styled from \"styled-components\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { device } from \"../../styles/devices\";\nimport { routes } from '../../util/config';\n//import { useHistory } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nconst StyledForm = styled(Form)`\n  margin: auto;\n  padding-top: 5%;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptopL} {\n    font-size: 16px; \n  }\n`;\n\nconst StyledInput = styled(Form.Group)`\n  // These are no longer needed but keeping in case we want to re-style inputs.\n  @media ${device.mobileS} {\n    width: 100%;\n  }\n  @media ${device.laptopL} {\n    width: 100%;\n  }\n`;\n\nconst StyledText = styled(Form.Group)`\n  @media ${device.mobileS} {\n    width: 100%;\n    color: white;\n    text-align: center;\n  }\n  @media ${device.laptopL} {\n    width: 100%;\n    color: white;\n    text-align: center;\n  }\n`;\n\nconst StyledLabel = styled(Form.Label)`\n  color: white;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptopL} {\n    font-size: 16px;\n  }\n`;\n\nconst StyledUpdateButton = styled(Button)` \n@media ${device.mobileS} {\n  font-size: 14px;\n}\n\n@media ${device.laptopL} {\n  font-size: 16px;\n}\n`;\n\nexport const VerifyUserForm = (): JSX.Element => {\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [verified, setVerified] = useState(false);\n\n    //const history = useHistory();\n\n    function validateUserFields(){\n        return (\n            username.length > 0 && email.length > 0\n        ); //makes sure the user enters something in each field\n    }\n\n    function handleVerifyUser(event: SyntheticEvent){\n        event.preventDefault();\n    \n        const userInfo = {\n            username: username,\n            email: email,\n        };\n\n        const sendVerifyInfoRequest = async () => {\n            try{\n                const resp = await axios.post(routes.verifyUser, userInfo);\n                console.log(resp.data);\n                if (resp.data === \"Success\") {\n                    alert(\"Follow the link sent to your email to reset your password\");\n                    setVerified(true);\n                    //history.push(\"/reset/resetPassword\");\n                } else if (resp.data === \"Failed\") {\n                    alert(\"Invalid username or email\");\n                }\n            }catch (err) {\n                alert(\"Reset Password failed\");\n                //Handle Error Here\n                console.error(err);\n            }\n          };\n          sendVerifyInfoRequest();\n    }\n\n    return(\n        <div className=\"VerifyUser\">\n          {!verified && (\n            <>\n               <StyledForm>\n               <Row>\n               <Col span={8} xs={6} md={8}></Col>\n               <Col span={8} xs={12} md={8}>\n               <StyledInput>\n                   <Form.Group controlId=\"username\">\n                   <StyledLabel>Username</StyledLabel>\n                   <Form.Control \n                       autoFocus\n                       required\n                       type=\"text\" \n                       value={username} \n                       onChange={(e) => setUsername(e.target.value)}\n                   />\n                   </Form.Group>\n               </StyledInput>\n               </Col>\n               <Col span={8} xs={6} md={8}></Col>\n               </Row>\n               <Row>\n               <Col span={8} xs={6} md={8}></Col>\n               <Col span={8} xs={12} md={8}>\n               <StyledInput>\n               <Form.Group controlId=\"email\">\n               <StyledLabel>Email</StyledLabel>\n               <Form.Control \n                   required\n                   type=\"email\" \n                   value={email} \n                   onChange={(e) => setEmail(e.target.value)}\n               />\n               </Form.Group>\n               </StyledInput>\n               </Col>\n               <Col span={8} xs={6} md={8}></Col>\n               </Row>\n             </StyledForm>\n             <Row>\n             <Col span={8} xs={6} md={8}></Col>\n             <StyledUpdateButton \n                 variant=\"success\"\n                 type=\"button\" \n                 disabled={!validateUserFields()} \n                 onClick={handleVerifyUser}\n             >\n             Verify\n             </StyledUpdateButton>\n             </Row> \n             </>\n          )}\n          {verified && (\n            <StyledForm>\n              <Row>\n               <Col span={8} xs={6} md={8}></Col>\n               <Col span={8} xs={12} md={8}>\n               <StyledText>You can now close this page</StyledText>\n               </Col>\n               <Col span={8} xs={6} md={8}></Col>\n               </Row>\n            </StyledForm>\n          )}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}