{"ast":null,"code":"var _jsxFileName = \"/home/whiteknight/Desktop/capstone/OldCapstoneProject/front/src/components/ApplyForFunds/ApplyForFunds.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Row, Col } from \"antd\";\nimport styled from \"styled-components\";\nimport { withStyles, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { green } from \"@material-ui/core/colors\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { device } from \"../../styles/devices\";\nimport { Navbar } from \"../Index\";\nimport { routes } from \"../../util/config\";\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledLabel = styled(Form.Label)`\n  color: white;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptop} {\n    font-size: 16px;\n  }\n`;\n_c = StyledLabel;\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Checkbox, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 30\n}, this));\nconst useStyles = makeStyles(theme => createStyles({\n  label: {\n    color: \"white\",\n    fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"14px\"\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      fontSize: \"16px\"\n    }\n  },\n  input: {\n    fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"14px\"\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      fontSize: \"16px\"\n    }\n  },\n  button: {\n    marginTop: \"10px\",\n    fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"14px\"\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      fontSize: \"16px\"\n    }\n  },\n  payment: {\n    fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n    paddingBottom: \"10px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"14px\"\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      fontSize: \"16px\"\n    }\n  }\n}));\nconst paymentMethods = [\"Check\", \"CashApp\", \"PayPal\", \"Other\"];\nexport const ApplyForFunds = () => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [reasonForFunds, setReasonForFunds] = useState(\"\");\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\n  const [paymentContext, setPaymentContext] = useState(\"\");\n  const [surveyCheck, setSurveyCheck] = useState({\n    surveyCheck: true\n  });\n\n  const handleChangeCheckBox = event => {\n    setSurveyCheck({ ...surveyCheck,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const handleChangeSelect = event => {\n    setPaymentMethod(event.target.value);\n  };\n\n  function postFundingRequest() {\n    let reasonText = reasonForFunds;\n\n    if (!reasonText) {\n      reasonText = \"User has requested aid\";\n    }\n\n    const request = {\n      fundingRequest: reasonText,\n      paymentMethod: paymentMethod,\n      paymentContext: paymentContext,\n      survey: surveyCheck.surveyCheck\n    };\n    console.log(request);\n\n    const requestAsync = async () => {\n      try {\n        const sessionUser = sessionStorage.getItem('username');\n\n        if (sessionUser != null) {\n          history.push(\"/apply-for-aid\");\n          const resp = await axios.post(routes.applyForFunds, request, {\n            withCredentials: true\n          });\n\n          if (resp.data === \"Success\") {\n            alert(\"Application submit successful.\");\n          } else {\n            alert(\"Application submit failed.\");\n          }\n        } else {\n          alert(\"You're not logged in. Redirecting to login page.\");\n          history.push(\"/\");\n        }\n      } catch (err) {\n        // Handle Error Here\n        alert(\"Request failed\");\n        console.error(err);\n      }\n    };\n\n    requestAsync();\n  }\n\n  const MenuItems = paymentMethods.map(i => /*#__PURE__*/_jsxDEV(MenuItem, {\n    \"data-testid\": \"select-option\",\n    className: classes.input,\n    value: i,\n    children: i\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      name: \"Apply For Funds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        xs: 6,\n        sm: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        xs: 12,\n        sm: 8,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"request\",\n            children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n              children: \"What will you use the funds for? (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              value: reasonForFunds,\n              onChange: e => setReasonForFunds(e.target.value),\n              className: classes.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        xs: 6,\n        sm: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        xs: 6,\n        sm: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        xs: 12,\n        sm: 8,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.payment,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-helper-label\",\n            children: \"Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"paymentMethodSelect\",\n            \"data-testid\": \"select\",\n            value: paymentMethod,\n            onChange: handleChangeSelect,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), MenuItems]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"Select your payment method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        xs: 6,\n        sm: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        xs: 6,\n        sm: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        xs: 12,\n        sm: 8,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"paymentMethod\",\n            children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n              children: \"Give us additional context (e.g. The username of your payment account)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              value: paymentContext,\n              onChange: e => setPaymentContext(e.target.value),\n              className: classes.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        xs: 6,\n        sm: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        xs: 6,\n        sm: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        xs: 12,\n        sm: 8,\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(GreenCheckbox, {\n            checked: surveyCheck.surveyCheck,\n            onChange: handleChangeCheckBox,\n            name: \"surveyCheck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this),\n          classes: {\n            label: classes.label\n          },\n          label: \"Would you be willing to share a quote or testimonial about your experience with BRF?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        xs: 6,\n        sm: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        xs: 6,\n        sm: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        xs: 12,\n        sm: 8,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          variant: \"success\",\n          onClick: postFundingRequest,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        xs: 6,\n        sm: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ApplyForFunds, \"ClpIlsOBH0V+7xn/OQm2U2n3Syg=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c2 = ApplyForFunds;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledLabel\");\n$RefreshReg$(_c2, \"ApplyForFunds\");","map":{"version":3,"sources":["/home/whiteknight/Desktop/capstone/OldCapstoneProject/front/src/components/ApplyForFunds/ApplyForFunds.tsx"],"names":["useState","Row","Col","styled","withStyles","createStyles","makeStyles","InputLabel","MenuItem","FormHelperText","FormControl","Select","FormControlLabel","green","Checkbox","axios","Form","Button","device","Navbar","routes","useHistory","StyledLabel","Label","mobileS","laptop","GreenCheckbox","root","color","checked","props","useStyles","theme","label","fontFamily","breakpoints","down","fontSize","up","input","button","marginTop","payment","paddingBottom","paymentMethods","ApplyForFunds","classes","history","reasonForFunds","setReasonForFunds","paymentMethod","setPaymentMethod","paymentContext","setPaymentContext","surveyCheck","setSurveyCheck","handleChangeCheckBox","event","target","name","handleChangeSelect","value","postFundingRequest","reasonText","request","fundingRequest","survey","console","log","requestAsync","sessionUser","sessionStorage","getItem","push","resp","post","applyForFunds","withCredentials","data","alert","err","error","MenuItems","map","i","e"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Row, Col } from \"antd\";\nimport styled from \"styled-components\";\nimport {\n  withStyles,\n  createStyles,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { green } from \"@material-ui/core/colors\";\nimport Checkbox, { CheckboxProps } from \"@material-ui/core/Checkbox\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { device } from \"../../styles/devices\";\nimport { Navbar } from \"../Index\";\nimport { routes } from \"../../util/config\";\nimport { useHistory } from 'react-router';\n\nconst StyledLabel = styled(Form.Label)`\n  color: white;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptop} {\n    font-size: 16px;\n  }\n`;\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    label: {\n      color: \"white\",\n      fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n      [theme.breakpoints.down(\"sm\")]: {\n        fontSize: \"14px\",\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        fontSize: \"16px\",\n      },\n    },\n    input: {\n      fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n      [theme.breakpoints.down(\"sm\")]: {\n        fontSize: \"14px\",\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        fontSize: \"16px\",\n      },\n    },\n    button: {\n      marginTop: \"10px\",\n      fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n      [theme.breakpoints.down(\"sm\")]: {\n        fontSize: \"14px\",\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        fontSize: \"16px\",\n      },\n    },\n    payment: {\n      fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n      paddingBottom: \"10px\",\n      [theme.breakpoints.down(\"sm\")]: {\n        fontSize: \"14px\",\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        fontSize: \"16px\",\n      },\n    },\n  })\n);\n\nconst paymentMethods = [\"Check\", \"CashApp\", \"PayPal\", \"Other\"];\n\nexport const ApplyForFunds = (): JSX.Element => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [reasonForFunds, setReasonForFunds] = useState(\"\");\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\n  const [paymentContext, setPaymentContext] = useState(\"\");\n  const [surveyCheck, setSurveyCheck] = useState({\n    surveyCheck: true,\n  });\n\n  const handleChangeCheckBox = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSurveyCheck({\n      ...surveyCheck,\n      [event.target.name]: event.target.checked,\n    });\n  };\n\n  const handleChangeSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setPaymentMethod(event.target.value as string);\n  };\n\n  function postFundingRequest() {\n    let reasonText = reasonForFunds;\n    if (!reasonText) {\n      reasonText = \"User has requested aid\";\n    }\n    const request = {\n      fundingRequest: reasonText,\n      paymentMethod: paymentMethod,\n      paymentContext: paymentContext,\n      survey: surveyCheck.surveyCheck,\n    };\n\n    console.log(request);\n\n    const requestAsync = async () => {\n      try {\n        const sessionUser = sessionStorage.getItem('username')\n        if (sessionUser != null) {\n          history.push(\"/apply-for-aid\");\n          const resp = await axios.post(routes.applyForFunds, request, { withCredentials: true });\n          if (resp.data === \"Success\") {\n            alert(\"Application submit successful.\")\n          } else {\n            alert(\"Application submit failed.\")\n          }\n        } else {\n          alert(\"You're not logged in. Redirecting to login page.\");\n          history.push(\"/\");\n        }\n      } catch (err) {\n        // Handle Error Here\n        alert(\"Request failed\")\n        console.error(err);\n      }\n    };\n    requestAsync();\n  }\n\n  const MenuItems = paymentMethods.map((i) => (\n    <MenuItem data-testid=\"select-option\" className={classes.input} value={i}>\n      {i}\n    </MenuItem>\n  ));\n  return (\n    <div>\n      <Navbar name=\"Apply For Funds\"></Navbar>\n      <Row>\n        <Col span={8} xs={6} sm={8}></Col>\n        <Col span={8} xs={12} sm={8}>\n          <Form>\n            <Form.Group controlId=\"request\">\n              <StyledLabel>\n                What will you use the funds for? (optional)\n              </StyledLabel>\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                value={reasonForFunds}\n                onChange={(e) => setReasonForFunds(e.target.value)}\n                className={classes.input}\n              />\n            </Form.Group>\n          </Form>\n        </Col>\n        <Col span={8} xs={6} sm={8}></Col>\n      </Row>\n      <Row>\n        <Col span={8} xs={6} sm={8}></Col>\n        <Col span={8} xs={12} sm={8}>\n          <FormControl className={classes.payment}>\n            <InputLabel id=\"demo-simple-select-helper-label\">\n              Payment Method\n            </InputLabel>\n            <Select\n              name=\"paymentMethodSelect\"\n              data-testid=\"select\"\n              value={paymentMethod}\n              onChange={handleChangeSelect}\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              {MenuItems}\n            </Select>\n            <FormHelperText>Select your payment method</FormHelperText>\n          </FormControl>\n        </Col>\n        <Col span={8} xs={6} sm={8}></Col>\n      </Row>\n      <Row>\n        <Col span={8} xs={6} sm={8}></Col>\n        <Col span={8} xs={12} sm={8}>\n          <Form>\n            <Form.Group controlId=\"paymentMethod\">\n              <StyledLabel>\n                Give us additional context (e.g. The username of your payment\n                account)\n              </StyledLabel>\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                value={paymentContext}\n                onChange={(e) => setPaymentContext(e.target.value)}\n                className={classes.input}\n              />\n            </Form.Group>\n          </Form>\n        </Col>\n        <Col span={8} xs={6} sm={8}></Col>\n      </Row>\n\n      <Row>\n        <Col span={8} xs={6} sm={8}></Col>\n        <Col span={8} xs={12} sm={8}>\n          <FormControlLabel\n            control={\n              <GreenCheckbox\n                checked={surveyCheck.surveyCheck}\n                onChange={handleChangeCheckBox}\n                name=\"surveyCheck\"\n              />\n            }\n            classes={{ label: classes.label }}\n            label=\"Would you be willing to share a quote or testimonial about your experience with BRF?\"\n          />\n        </Col>\n        <Col span={8} xs={6} sm={8}></Col>\n      </Row>\n      <Row>\n        <Col span={8} xs={6} sm={8}></Col>\n        <Col span={8} xs={12} sm={8}>\n          <Button\n            className={classes.button}\n            variant=\"success\"\n            onClick={postFundingRequest}\n          >\n            Submit\n          </Button>\n        </Col>\n        <Col span={8} xs={6} sm={8}></Col>\n      </Row>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}