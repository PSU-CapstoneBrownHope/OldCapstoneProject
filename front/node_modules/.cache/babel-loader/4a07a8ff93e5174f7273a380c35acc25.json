{"ast":null,"code":"var _jsxFileName = \"/home/whiteknight/Desktop/capstone/OldCapstoneProject/front/src/components/SignupVerify/SignupVerifyForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport styled from \"styled-components\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { device } from \"../../styles/devices\";\nimport { routes } from '../../util/config';\nimport { useHistory } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledForm = styled(Form)`\n  margin: auto;\n  padding-top: 5%;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptopL} {\n    font-size: 16px; \n  }\n`;\n_c = StyledForm;\nconst StyledInput = styled(Form.Group)`\n  // These are no longer needed but keeping in case we want to re-style inputs.\n  @media ${device.mobileS} {\n    width: 100%;\n  }\n  @media ${device.laptopL} {\n    width: 100%;\n  }\n`;\n_c2 = StyledInput;\nconst StyledLabel = styled(Form.Label)`\n  color: white;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptopL} {\n    font-size: 16px;\n  }\n`;\n_c3 = StyledLabel;\nconst StyledUpdateButton = styled(Button)` \n@media ${device.mobileS} {\n  font-size: 14px;\n}\n\n@media ${device.laptopL} {\n  font-size: 16px;\n}\n`;\n_c4 = StyledUpdateButton;\nexport const SignupVerifyForm = () => {\n  _s();\n\n  const [new_password, setNewPassword] = useState(\"\");\n  const [password_verify, setVerifyNewPassword] = useState(\"\");\n  const history = useHistory();\n\n  function validateFields() {\n    return new_password.length > 0 && new_password === password_verify; //makes sure the user enters something in each field and password matches\n  }\n\n  function handleSignupVerify(event) {\n    event.preventDefault();\n    let url = window.location.href;\n    let urlArr = url.split('/');\n    let token = urlArr[urlArr.length - 1];\n    console.log('URL: ', url);\n    console.log('URL Array: ', urlArr);\n    console.log('TOKEN: ', token);\n    const userInfo = {\n      token: token,\n      password: new_password\n    };\n\n    const sendSignupVerifyRequest = async () => {\n      try {\n        const resp = await axios.post(routes.signup_verify, userInfo);\n        console.log(resp.data);\n\n        if (resp.data === \"Success\") {\n          alert(\"Account claimed. Redirecting to loggin...\");\n          history.push(\"/\");\n        } else if (resp.data === \"Failed\") {\n          alert(\"Bad Token\");\n        } else if (resp.data === \"NoMatch\") {\n          alert(\"Password does not match.\");\n        }\n      } catch (err) {\n        alert(\"Password reset failed\"); // Handle Error Here\n\n        console.error(err);\n      }\n    };\n\n    sendSignupVerifyRequest();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SignupVerify\",\n    children: /*#__PURE__*/_jsxDEV(StyledForm, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(StyledInput, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"newPassword\",\n              children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n                children: \"New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                type: \"password\",\n                value: new_password,\n                onChange: e => setNewPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(StyledInput, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"verifyNewPassword\",\n              children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                value: password_verify,\n                onChange: e => setVerifyNewPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(StyledUpdateButton, {\n          variant: \"success\",\n          type: \"button\",\n          disabled: !validateFields(),\n          onClick: handleSignupVerify,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupVerifyForm, \"xEmMBK0G3TkHSCC4/U0qjMMlsVQ=\", false, function () {\n  return [useHistory];\n});\n\n_c5 = SignupVerifyForm;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledForm\");\n$RefreshReg$(_c2, \"StyledInput\");\n$RefreshReg$(_c3, \"StyledLabel\");\n$RefreshReg$(_c4, \"StyledUpdateButton\");\n$RefreshReg$(_c5, \"SignupVerifyForm\");","map":{"version":3,"sources":["/home/whiteknight/Desktop/capstone/OldCapstoneProject/front/src/components/SignupVerify/SignupVerifyForm.tsx"],"names":["React","useState","axios","styled","Form","Button","device","routes","useHistory","Row","Col","StyledForm","mobileS","laptopL","StyledInput","Group","StyledLabel","Label","StyledUpdateButton","SignupVerifyForm","new_password","setNewPassword","password_verify","setVerifyNewPassword","history","validateFields","length","handleSignupVerify","event","preventDefault","url","window","location","href","urlArr","split","token","console","log","userInfo","password","sendSignupVerifyRequest","resp","post","signup_verify","data","alert","push","err","error","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, SyntheticEvent } from \"react\";\nimport axios from 'axios';\nimport styled from \"styled-components\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { device } from \"../../styles/devices\";\nimport { routes } from '../../util/config';\nimport { useHistory } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nconst StyledForm = styled(Form)`\n  margin: auto;\n  padding-top: 5%;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptopL} {\n    font-size: 16px; \n  }\n`;\n\nconst StyledInput = styled(Form.Group)`\n  // These are no longer needed but keeping in case we want to re-style inputs.\n  @media ${device.mobileS} {\n    width: 100%;\n  }\n  @media ${device.laptopL} {\n    width: 100%;\n  }\n`;\n\nconst StyledLabel = styled(Form.Label)`\n  color: white;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptopL} {\n    font-size: 16px;\n  }\n`;\n\nconst StyledUpdateButton = styled(Button)` \n@media ${device.mobileS} {\n  font-size: 14px;\n}\n\n@media ${device.laptopL} {\n  font-size: 16px;\n}\n`;\n\nexport const SignupVerifyForm = (): JSX.Element => {\n  const [new_password, setNewPassword] = useState(\"\");\n  const [password_verify, setVerifyNewPassword] = useState(\"\");\n\n\n  const history = useHistory();\n\n  function validateFields(){\n      return (\n        new_password.length > 0 && new_password === password_verify\n      ); //makes sure the user enters something in each field and password matches\n  }\n\n  function handleSignupVerify(event: SyntheticEvent){\n      event.preventDefault();\n\n      let url = window.location.href;\n      let urlArr = url.split('/');\n      let token = urlArr[urlArr.length-1];\n      console.log('URL: ', url);\n      console.log('URL Array: ', urlArr);\n      console.log('TOKEN: ', token);\n  \n      const userInfo = {\n        token: token,\n        password: new_password,\n      };\n\n      const sendSignupVerifyRequest = async () => {\n          try{\n            const resp = await axios.post(routes.signup_verify, userInfo);\n            console.log(resp.data);\n            if (resp.data === \"Success\") {\n                alert(\"Account claimed. Redirecting to loggin...\");\n                history.push(\"/\");\n            } else if (resp.data === \"Failed\") {\n                alert(\"Bad Token\");\n            } else if (resp.data === \"NoMatch\") {\n                alert(\"Password does not match.\");\n            }\n          }catch (err) {\n                alert(\"Password reset failed\");\n            // Handle Error Here\n                console.error(err);\n          }\n        };\n        sendSignupVerifyRequest();\n  }\n\n  return(\n    <div className=\"SignupVerify\">\n      <StyledForm>\n      <Row>\n      <Col span={8} xs={6} md={8}></Col>\n      <Col span={8} xs={12} md={8}>\n      <StyledInput>\n      <Form.Group controlId=\"newPassword\">\n        <StyledLabel>New Password</StyledLabel>\n        <Form.Control \n          required\n          type=\"password\" \n          value={new_password} \n          onChange={(e) => setNewPassword(e.target.value)}\n        />\n      </Form.Group>\n      </StyledInput>\n      </Col>\n      <Col span={8} xs={6} md={8}></Col>\n      </Row>\n      <Row>\n      <Col span={8} xs={6} md={8}></Col>\n      <Col span={8} xs={12} md={8}>\n      <StyledInput>\n      <Form.Group controlId=\"verifyNewPassword\">\n        <StyledLabel>Confirm Password</StyledLabel>\n        <Form.Control \n          type=\"password\" \n          value={password_verify} \n          onChange={(e) => setVerifyNewPassword(e.target.value)}\n        />\n      </Form.Group>\n      </StyledInput>\n      </Col>\n      <Col span={8} xs={6} md={8}></Col>\n      </Row>\n      <Row>\n      <Col span={8} xs={6} md={8}></Col>\n      <StyledUpdateButton \n        variant=\"success\"\n        type=\"button\" \n        disabled={!validateFields()} \n        onClick={handleSignupVerify}\n        >\n        Submit\n      </StyledUpdateButton>\n      </Row>\n      </StyledForm>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}