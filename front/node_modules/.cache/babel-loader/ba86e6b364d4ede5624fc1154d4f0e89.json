{"ast":null,"code":"var _jsxFileName = \"/home/whiteknight/Desktop/capstone/OldCapstoneProject/front/src/components/Account/AccountInfo/AccountInfo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col } from \"antd\";\nimport axios from 'axios';\nimport styled from \"styled-components\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { accountFields } from \"./util\";\nimport { Navbar } from \"../../Index\";\nimport { device } from \"../../../styles/devices\";\nimport { routes } from '../../../util/config';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    marginBottom: '10px',\n    marginRight: '10px'\n  },\n  menu: {\n    minWidth: 150\n  },\n  username: {\n    color: 'white'\n  }\n});\nconst StyledButton = styled(Button)`\n  max-width: 100px;\n  margin: auto;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptop} {\n    font-size: 16px;\n  }\n`;\n_c = StyledButton;\nconst StyledLabel = styled(Form.Label)`\n  color: white;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptop} {\n    font-size: 16px;\n  }\n`;\n_c2 = StyledLabel;\nexport const AccountInfo = () => {\n  _s();\n\n  const [editing, setEditing] = useState(false);\n  const [form, setForm] = useState(accountFields);\n  const [info, setInfo] = useState(accountFields);\n  const [contactMethod, setContact] = useState('');\n  const [paymentMethod, setPayment] = useState('');\n  const [currentId, setCurrentId] = useState(\"\");\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleClick = () => history.push(\"/updatePassword\");\n\n  useEffect(() => {\n    if (currentId && AccountFieldsInputs) {\n      const inputElement = document.getElementById(currentId);\n      if (inputElement) inputElement.focus();\n    }\n  });\n\n  const updateField = (e, index) => {\n    const elementValue = e.target.value;\n    const elementId = e.target.id;\n    const formCopy = [...form];\n    formCopy[index].value = elementValue;\n    setForm(formCopy);\n    setCurrentId(elementId);\n    console.log(form);\n  };\n\n  const handleContactChange = event => {\n    setContact(event.target.value);\n    const contactMethod = event.target.value;\n    const formCopy = [...form];\n    formCopy[6].value = contactMethod;\n    setForm(formCopy);\n  };\n\n  const handlePaymentChange = event => {\n    setPayment(event.target.value);\n    const paymentMethod = event.target.value;\n    const formCopy = [...form];\n    formCopy[7].value = paymentMethod;\n    setForm(formCopy);\n  };\n\n  function getExistingAccountInfo() {\n    const newLoginRequest = {\n      userName: accountFields[0].value\n    };\n\n    const sendInfoRequest = async () => {\n      try {\n        const resp = await axios.post(routes.getAccountInfo, newLoginRequest);\n        console.log(resp.data);\n\n        if (resp.data === \"No such user exists\") {\n          alert(\"No such user exists\");\n        } else {\n          const formCopy = [...form];\n          formCopy[1].value = resp.data.firstName;\n          formCopy[2].value = resp.data.lastName;\n          formCopy[3].value = resp.data.phoneNumber;\n          formCopy[4].value = resp.data.address;\n          formCopy[5].value = resp.data.emailAddress;\n          formCopy[6].value = resp.data.contactMethod;\n          formCopy[7].value = resp.data.paymentMethod;\n          setContact(resp.data.contactMethod);\n          setPayment(resp.data.paymentMethod);\n          setInfo(formCopy);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    sendInfoRequest();\n  }\n\n  function postAccountUpdate() {\n    const sendUpdateRequest = async () => {\n      try {\n        const resp = await axios.post(routes.updateAccount, form, {\n          withCredentials: true\n        });\n        console.log(resp.data);\n      } catch (err) {\n        // Handle Error Here\n        console.error(err);\n      }\n    };\n\n    sendUpdateRequest();\n    history.push(\"/account\");\n    setEditing(false);\n  }\n\n  const AccountFieldsInfo = () => {\n    if (info[1].value === \"\") {\n      getExistingAccountInfo();\n    }\n\n    let items = [];\n    info.forEach((item, index) => {\n      items.push( /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n              htmlFor: item.name,\n              children: item.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              className: classes.username,\n              children: item.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: items\n    }, void 0, false);\n  };\n\n  const AccountFieldsInputs = () => {\n    if (!form) return /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 23\n    }, this); // Generates Menu Options for Contact Method & Payment Method\n\n    function createMenuOptions(options) {\n      let menu = [];\n      options.forEach((item, index) => {\n        menu.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item,\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this));\n      });\n      return menu;\n    }\n\n    let items = [];\n    form.forEach((item, index) => {\n      // Contact / Payment Methods are select options not inputs\n      if (item.name === 'userName') {\n        items.push( /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            xs: 6,\n            md: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            xs: 12,\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n                htmlFor: item.name,\n                children: item.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                className: classes.username,\n                children: item.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            xs: 6,\n            md: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this));\n      } else if (item.type === 'select') {\n        if (item.name === 'contactMethod') {\n          items.push( /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              xs: 6,\n              md: 8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              xs: 12,\n              md: 8,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: item.name,\n                    children: item.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: item.name,\n                    label: item.name,\n                    id: item.name,\n                    className: classes.menu,\n                    value: contactMethod,\n                    onChange: handleContactChange,\n                    children: createMenuOptions(item.options)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              xs: 6,\n              md: 8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this));\n        } else {\n          items.push( /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              xs: 6,\n              md: 8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              xs: 12,\n              md: 8,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: item.name,\n                    children: item.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    label: item.name,\n                    id: item.name,\n                    name: item.name,\n                    className: classes.menu,\n                    value: paymentMethod,\n                    onChange: handlePaymentChange,\n                    children: createMenuOptions(item.options)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              xs: 6,\n              md: 8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this));\n        }\n      } else {\n        items.push( /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            xs: 6,\n            md: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            xs: 12,\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n                htmlFor: item.name,\n                children: item.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                id: item.name,\n                name: item.name,\n                type: item.type,\n                value: form[index].value,\n                pattern: item.pattern ? item.pattern : undefined,\n                onChange: e => {\n                  updateField(e, index);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            xs: 6,\n            md: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this));\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: items\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      name: \"Edit Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), editing ? /*#__PURE__*/_jsxDEV(AccountFieldsInputs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(AccountFieldsInfo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 64\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n          variant: editing ? \"success\" : \"outline-success\",\n          onClick: () => setEditing(!editing),\n          className: classes.root,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          variant: \"outline-success\",\n          onClick: postAccountUpdate,\n          className: classes.root,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n        variant: \"success\",\n        onClick: handleClick,\n        className: classes.root,\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountInfo, \"vT8LD+REOH0xmjEf1nyCuNYYzkA=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c3 = AccountInfo;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledButton\");\n$RefreshReg$(_c2, \"StyledLabel\");\n$RefreshReg$(_c3, \"AccountInfo\");","map":{"version":3,"sources":["/home/whiteknight/Desktop/capstone/OldCapstoneProject/front/src/components/Account/AccountInfo/AccountInfo.tsx"],"names":["React","useState","useEffect","Row","Col","axios","styled","Form","Button","accountFields","Navbar","device","routes","useHistory","makeStyles","Select","MenuItem","InputLabel","Typography","FormControl","useStyles","root","marginBottom","marginRight","menu","minWidth","username","color","StyledButton","mobileS","laptop","StyledLabel","Label","AccountInfo","editing","setEditing","form","setForm","info","setInfo","contactMethod","setContact","paymentMethod","setPayment","currentId","setCurrentId","classes","history","handleClick","push","AccountFieldsInputs","inputElement","document","getElementById","focus","updateField","e","index","elementValue","target","value","elementId","id","formCopy","console","log","handleContactChange","event","handlePaymentChange","getExistingAccountInfo","newLoginRequest","userName","sendInfoRequest","resp","post","getAccountInfo","data","alert","firstName","lastName","phoneNumber","address","emailAddress","err","error","postAccountUpdate","sendUpdateRequest","updateAccount","withCredentials","AccountFieldsInfo","items","forEach","item","name","label","createMenuOptions","options","type","pattern","undefined"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent, useEffect } from \"react\";\nimport { Row, Col } from \"antd\";\nimport axios from 'axios';\nimport styled from \"styled-components\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { accountFields } from \"./util\";\nimport { Navbar } from \"../../Index\";\nimport { device } from \"../../../styles/devices\";\nimport { routes } from '../../../util/config';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\n\n\nconst useStyles = makeStyles({\n  root: {\n    marginBottom: '10px',\n    marginRight: '10px',\n  },\n  menu: {\n    minWidth: 150,\n  },\n  username: {\n    color: 'white',\n  }\n});\n\nconst StyledButton = styled(Button)`\n  max-width: 100px;\n  margin: auto;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptop} {\n    font-size: 16px;\n  }\n`;\n\nconst StyledLabel = styled(Form.Label)`\n  color: white;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptop} {\n    font-size: 16px;\n  }\n`;\n\nexport const AccountInfo = () => {\n  const [editing, setEditing] = useState(false);\n  const [form, setForm] = useState(accountFields);\n  const [info, setInfo] = useState(accountFields);\n  const [contactMethod, setContact] = useState('');\n  const [paymentMethod, setPayment] = useState('');\n  const [currentId, setCurrentId] = useState(\"\");\n  const classes = useStyles();\n  const history = useHistory();\n  const handleClick = () => history.push(\"/updatePassword\");\n\n  useEffect(() => {\n    if (currentId && AccountFieldsInputs) {\n      const inputElement = document.getElementById(currentId);\n      if (inputElement) inputElement.focus();\n    }\n  });\n\n  const updateField = (e: React.BaseSyntheticEvent, index: number): void => {\n    const elementValue = (e.target as HTMLInputElement).value;\n    const elementId = (e.target as HTMLInputElement).id;\n    const formCopy: any = [...form];\n    formCopy[index].value = elementValue;\n    setForm(formCopy);\n    setCurrentId(elementId);\n    console.log(form)\n  };\n\n  const handleContactChange = (event: React.ChangeEvent<{value: unknown}>) => {\n    setContact(event.target.value as string)\n    const contactMethod = event.target.value as string;\n    const formCopy: any = [...form];\n    formCopy[6].value = contactMethod;\n    setForm(formCopy);\n  };\n\n  const handlePaymentChange = (event: React.ChangeEvent<{value: unknown}>) => {\n    setPayment(event.target.value as string)\n    const paymentMethod = event.target.value as string;\n    const formCopy: any = [...form];\n    formCopy[7].value = paymentMethod;\n    setForm(formCopy);\n  };\n  \n  function getExistingAccountInfo() {\n    const newLoginRequest = {\n      userName: accountFields[0].value,\n    };\n\n    const sendInfoRequest = async () => {\n      try {\n        const resp = await axios.post(routes.getAccountInfo, newLoginRequest);\n        console.log(resp.data);\n        if (resp.data === \"No such user exists\") {\n          alert(\"No such user exists\");\n        }\n        else {\n          const formCopy: any = [...form];\n          formCopy[1].value = resp.data.firstName;\n          formCopy[2].value = resp.data.lastName;\n          formCopy[3].value = resp.data.phoneNumber;\n          formCopy[4].value = resp.data.address;\n          formCopy[5].value = resp.data.emailAddress;\n          formCopy[6].value = resp.data.contactMethod;\n          formCopy[7].value = resp.data.paymentMethod;\n          setContact(resp.data.contactMethod);\n          setPayment(resp.data.paymentMethod);\n          setInfo(formCopy);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    sendInfoRequest();\n    \n  }\n\n  function postAccountUpdate() {\n    const sendUpdateRequest = async () => {\n      try {\n        const resp = await axios.post(routes.updateAccount, form, { withCredentials: true });\n        console.log(resp.data);\n      } catch (err) {\n        // Handle Error Here\n        console.error(err);\n      }\n    };\n    sendUpdateRequest();\n    history.push(\"/account\");\n    setEditing(false);\n  }\n\n  const AccountFieldsInfo = () => {\n    if (info[1].value === \"\") {\n      getExistingAccountInfo();\n    }\n    let items: any = [];\n    info.forEach((item: any, index: any) => {\n        items.push(\n          <Row key={index}>\n            <Col span={8} xs={6} md={8}></Col>\n            <Col span={8} xs={12} md={8}>\n              <Form.Group>\n                <StyledLabel htmlFor={item.name}>{item.label}</StyledLabel>\n                <Typography variant=\"h6\" className={classes.username}>{item.value}</Typography>\n              </Form.Group>\n            </Col>\n            <Col span={8} xs={6} md={8}></Col>\n          </Row>\n        )\n    });\n    return <>{items}</>;\n  }\n\n\n  const AccountFieldsInputs = () => {\n    if (!form) return <span></span>;\n    // Generates Menu Options for Contact Method & Payment Method\n    function createMenuOptions(options: string[]) {\n      let menu: any = [];\n      options.forEach((item: any, index: any) => {\n          menu.push(\n            <MenuItem key={item} value={item}>{item}</MenuItem>\n          )\n      })\n      return menu;\n    }\n\n    let items: any = [];\n    form.forEach((item: any, index: any) => {\n      // Contact / Payment Methods are select options not inputs\n      if (item.name === 'userName') {\n        items.push(\n          <Row key={index}>\n            <Col span={8} xs={6} md={8}></Col>\n            <Col span={8} xs={12} md={8}>\n              <Form.Group>\n                <StyledLabel htmlFor={item.name}>{item.label}</StyledLabel>\n                <Typography variant=\"h6\" className={classes.username}>{item.value}</Typography>\n              </Form.Group>\n            </Col>\n            <Col span={8} xs={6} md={8}></Col>\n          </Row>\n        )\n      }\n\n      else if (item.type === 'select') {\n        if (item.name ==='contactMethod') {\n          items.push(\n            <Row key={index}>\n              <Col span={8} xs={6} md={8}></Col>\n              <Col span={8} xs={12} md={8}>\n                {/* <StyledInput> */}\n                <Form.Group>\n                  <FormControl>\n                  <InputLabel id={item.name}>{item.label}</InputLabel>\n                  <Select\n                    labelId={item.name}\n                    label={item.name}\n                    id={item.name}\n                    className={classes.menu}\n                    value={contactMethod}\n                    onChange={handleContactChange}\n                  >\n                    {createMenuOptions(item.options)}\n                  </Select>\n                  </FormControl>\n                </Form.Group>\n                {/* </StyledInput> */}\n              </Col>\n              <Col span={8} xs={6} md={8}></Col>\n            </Row>\n          )\n        }\n        else {\n          items.push(\n            <Row key={index}>\n              <Col span={8} xs={6} md={8}></Col>\n              <Col span={8} xs={12} md={8}>\n                {/* <StyledInput> */}\n                <Form.Group>\n                  <FormControl>\n                  <InputLabel id={item.name}>{item.label}</InputLabel>\n                  <Select\n                    label={item.name}\n                    id={item.name}\n                    name={item.name}\n                    className={classes.menu}\n                    value={paymentMethod}\n                    onChange={handlePaymentChange}\n                  >\n                    {createMenuOptions(item.options)}\n                  </Select>\n                  </FormControl>\n                </Form.Group>\n                {/* </StyledInput> */}\n              </Col>\n              <Col span={8} xs={6} md={8}></Col>\n            </Row>\n          )\n        }\n        \n      }\n\n      else {\n        items.push(\n            <Row key={index}>\n              <Col span={8} xs={6} md={8}></Col>\n              <Col span={8} xs={12} md={8}>\n                {/* <StyledInput> */}\n                <Form.Group>\n                  <StyledLabel htmlFor={item.name}>{item.label}</StyledLabel>\n                  <Form.Control\n                    id={item.name}\n                    name={item.name}\n                    type={item.type}\n                    value={form[index].value}\n                    pattern={item.pattern ? item.pattern : undefined}\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                      updateField(e, index);\n                    }}\n                  ></Form.Control>\n                </Form.Group>\n                {/* </StyledInput> */}\n              </Col>\n              <Col span={8} xs={6} md={8}></Col>\n            </Row>\n        );\n      }\n    });\n    return <>{items}</>;\n  };\n\n  return (\n    <div>\n      <Navbar name=\"Edit Account\"></Navbar>\n      {editing ? <AccountFieldsInputs></AccountFieldsInputs> : <AccountFieldsInfo></AccountFieldsInfo> }\n      <Row>\n      <Col span={8}></Col>\n      <Col span={8}>\n        <StyledButton\n          variant={editing ? \"success\" : \"outline-success\"}\n          onClick={() => setEditing(!editing)}\n          className={classes.root}\n        >\n          Edit\n        </StyledButton>\n          <StyledButton\n            variant='outline-success'\n            onClick={postAccountUpdate} \n            className={classes.root}\n          >\n            Save\n          </StyledButton>\n      </Col>\n      <Col span={8}></Col>\n      </Row>\n      <Row>\n      <Col span={8}></Col>\n          <StyledButton\n          variant={\"success\"}\n          onClick={handleClick}\n          className={classes.root}\n        >\n          Update Password\n        </StyledButton>\n        <Col span={8}></Col>\n      </Row>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}