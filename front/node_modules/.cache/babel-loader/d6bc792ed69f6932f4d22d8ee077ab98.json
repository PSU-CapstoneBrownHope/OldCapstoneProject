{"ast":null,"code":"var _jsxFileName = \"/home/whiteknight/Desktop/capstone/OldCapstoneProject/front/src/components/UpdatePassword/UpdatePasswordForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport styled from \"styled-components\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { device } from \"../../styles/devices\";\nimport { routes } from '../../util/config';\nimport { useHistory } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledForm = styled(Form)`\n  margin: auto;\n  padding-top: 5%;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptopL} {\n    font-size: 16px; \n  }\n`;\n_c = StyledForm;\nconst StyledInput = styled(Form.Group)`\n  // These are no longer needed but keeping in case we want to re-style inputs.\n  @media ${device.mobileS} {\n    width: 100%;\n  }\n  @media ${device.laptopL} {\n    width: 100%;\n  }\n`;\n_c2 = StyledInput;\nconst StyledLabel = styled(Form.Label)`\n  color: white;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptopL} {\n    font-size: 16px;\n  }\n`;\n_c3 = StyledLabel;\nconst StyledUpdateButton = styled(Button)` \n@media ${device.mobileS} {\n  font-size: 14px;\n}\n\n@media ${device.laptopL} {\n  font-size: 16px;\n}\n`;\n_c4 = StyledUpdateButton;\nexport const UpdatePasswordForm = () => {\n  _s();\n\n  //const [username, setUsername] = useState(\"\");\n  const [old_password, setOldPassword] = useState(\"\");\n  const [new_password, setNewPassword] = useState(\"\");\n  const [new_password_verify, setVerifyNewPassword] = useState(\"\");\n  const history = useHistory();\n\n  function validatePasswordChange() {\n    return (\n      /*username.length > 0 && */\n      old_password.length > 0 && new_password.length > 0 && new_password === new_password_verify && new_password !== old_password\n    ); //makes sure the user enters something in each field and that the new password was typed correctly\n  }\n\n  function getUsername() {\n    if (sessionStorage.getItem('username') == null) {\n      alert('Not logged in. Redirecting to login page...');\n      history.push('/');\n    }\n\n    return sessionStorage.getItem('username');\n  }\n\n  function handleUpdatePassword(event) {\n    event.preventDefault();\n    const newUserPassword = {\n      //username: username,\n      new_password: new_password,\n      old_password: old_password,\n      new_password_verify: new_password_verify\n    };\n\n    const sendUpdateRequest = async () => {\n      try {\n        const resp = await axios.post(routes.updatePassword, newUserPassword, {\n          withCredentials: true\n        });\n        console.log(resp.data);\n\n        if (resp.data === \"Success\") {\n          alert(\"Password Update Successful!\");\n          history.push(\"/\");\n        } else if (resp.data === \"Failed\") {\n          alert(\"Sorry, wrong username or password. Please try again!\");\n        }\n      } catch (err) {\n        alert(\"Password change failed\"); // Handle Error Here\n\n        console.error(err);\n      }\n    };\n\n    sendUpdateRequest();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UpdatePassword\",\n    children: /*#__PURE__*/_jsxDEV(StyledForm, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(StyledInput, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"username\",\n              children: /*#__PURE__*/_jsxDEV(StyledLabel, {\n                children: [\"Username: \", getUsername()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(StyledInput, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"oldPassword\",\n              children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n                children: \"Old Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                autoFocus: true,\n                type: \"password\",\n                value: old_password,\n                onChange: e => setOldPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(StyledInput, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"newPassword\",\n              children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n                children: \"New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                value: new_password,\n                onChange: e => setNewPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(StyledInput, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"verifyNewPassword\",\n              children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n                children: \"Verify New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                value: new_password_verify,\n                onChange: e => setVerifyNewPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          xs: 6,\n          md: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StyledUpdateButton, {\n          variant: \"success\",\n          type: \"submit\",\n          disabled: !validatePasswordChange(),\n          onClick: handleUpdatePassword,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdatePasswordForm, \"bkNJ5SvBLK5LT7qOxu0vplaqWuA=\", false, function () {\n  return [useHistory];\n});\n\n_c5 = UpdatePasswordForm;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledForm\");\n$RefreshReg$(_c2, \"StyledInput\");\n$RefreshReg$(_c3, \"StyledLabel\");\n$RefreshReg$(_c4, \"StyledUpdateButton\");\n$RefreshReg$(_c5, \"UpdatePasswordForm\");","map":{"version":3,"sources":["/home/whiteknight/Desktop/capstone/OldCapstoneProject/front/src/components/UpdatePassword/UpdatePasswordForm.tsx"],"names":["React","useState","axios","styled","Form","Button","device","routes","useHistory","Row","Col","StyledForm","mobileS","laptopL","StyledInput","Group","StyledLabel","Label","StyledUpdateButton","UpdatePasswordForm","old_password","setOldPassword","new_password","setNewPassword","new_password_verify","setVerifyNewPassword","history","validatePasswordChange","length","getUsername","sessionStorage","getItem","alert","push","handleUpdatePassword","event","preventDefault","newUserPassword","sendUpdateRequest","resp","post","updatePassword","withCredentials","console","log","data","err","error","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;;AAEA,MAAMC,UAAU,GAAGR,MAAM,CAACC,IAAD,CAAO;AAChC;AACA;AACA,WAAWE,MAAM,CAACM,OAAQ;AAC1B;AACA;AACA;AACA,WAAWN,MAAM,CAACO,OAAQ;AAC1B;AACA;AACA,CAVA;KAAMF,U;AAYN,MAAMG,WAAW,GAAGX,MAAM,CAACC,IAAI,CAACW,KAAN,CAAa;AACvC;AACA,WAAWT,MAAM,CAACM,OAAQ;AAC1B;AACA;AACA,WAAWN,MAAM,CAACO,OAAQ;AAC1B;AACA;AACA,CARA;MAAMC,W;AAUN,MAAME,WAAW,GAAGb,MAAM,CAACC,IAAI,CAACa,KAAN,CAAa;AACvC;AACA,WAAWX,MAAM,CAACM,OAAQ;AAC1B;AACA;AACA;AACA,WAAWN,MAAM,CAACO,OAAQ;AAC1B;AACA;AACA,CATA;MAAMG,W;AAWN,MAAME,kBAAkB,GAAGf,MAAM,CAACE,MAAD,CAAS;AAC1C,SAASC,MAAM,CAACM,OAAQ;AACxB;AACA;AACA;AACA,SAASN,MAAM,CAACO,OAAQ;AACxB;AACA;AACA,CARA;MAAMK,kB;AAUN,OAAO,MAAMC,kBAAkB,GAAG,MAAmB;AAAA;;AACnD;AACA,QAAM,CAACC,YAAD,EAAeC,cAAf,IAAiCpB,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACqB,YAAD,EAAeC,cAAf,IAAiCtB,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACuB,mBAAD,EAAsBC,oBAAtB,IAA8CxB,QAAQ,CAAC,EAAD,CAA5D;AAEA,QAAMyB,OAAO,GAAGlB,UAAU,EAA1B;;AAEA,WAASmB,sBAAT,GAAiC;AAC/B;AACE;AAA2BP,MAAAA,YAAY,CAACQ,MAAb,GAAsB,CAAtB,IAA2BN,YAAY,CAACM,MAAb,GAAsB,CAAjD,IAAsDN,YAAY,KAAKE,mBAAvE,IAA8FF,YAAY,KAAKF;AAD5I,MAD+B,CAG5B;AACJ;;AAED,WAASS,WAAT,GAAuB;AACrB,QAAIC,cAAc,CAACC,OAAf,CAAuB,UAAvB,KAAsC,IAA1C,EACA;AACEC,MAAAA,KAAK,CAAC,6CAAD,CAAL;AACAN,MAAAA,OAAO,CAACO,IAAR,CAAa,GAAb;AACD;;AACD,WAAOH,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAP;AACD;;AAED,WAASG,oBAAT,CAA8BC,KAA9B,EAAoD;AAClDA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,eAAe,GAAG;AACtB;AACAf,MAAAA,YAAY,EAAEA,YAFQ;AAGtBF,MAAAA,YAAY,EAAEA,YAHQ;AAItBI,MAAAA,mBAAmB,EAAEA;AAJC,KAAxB;;AAOA,UAAMc,iBAAiB,GAAG,YAAY;AACpC,UAAG;AACD,cAAMC,IAAI,GAAG,MAAMrC,KAAK,CAACsC,IAAN,CAAWjC,MAAM,CAACkC,cAAlB,EAAkCJ,eAAlC,EAAmD;AAAEK,UAAAA,eAAe,EAAE;AAAnB,SAAnD,CAAnB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,IAAjB;;AACA,YAAIN,IAAI,CAACM,IAAL,KAAc,SAAlB,EAA6B;AAC3Bb,UAAAA,KAAK,CAAC,6BAAD,CAAL;AACAN,UAAAA,OAAO,CAACO,IAAR,CAAa,GAAb;AACD,SAHD,MAGO,IAAIM,IAAI,CAACM,IAAL,KAAc,QAAlB,EAA4B;AACjCb,UAAAA,KAAK,CAAC,sDAAD,CAAL;AACD;AACF,OATD,CASC,OAAOc,GAAP,EAAY;AACXd,QAAAA,KAAK,CAAC,wBAAD,CAAL,CADW,CAEX;;AACAW,QAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD;AACF,KAfD;;AAgBAR,IAAAA,iBAAiB;AAClB;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE,QAAC,UAAD;AAAA,8BACA,QAAC,GAAD;AAAA,gCACA,QAAC,GAAD;AAAK,UAAA,IAAI,EAAE,CAAX;AAAc,UAAA,EAAE,EAAE,CAAlB;AAAqB,UAAA,EAAE,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,GAAD;AAAK,UAAA,IAAI,EAAE,CAAX;AAAc,UAAA,EAAE,EAAE,EAAlB;AAAsB,UAAA,EAAE,EAAE,CAA1B;AAAA,iCACA,QAAC,WAAD;AAAA,mCACE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,UAAtB;AAAA,qCACE,QAAC,WAAD;AAAA,yCAAwBT,WAAW,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAFA,eASE,QAAC,GAAD;AAAK,UAAA,IAAI,EAAE,CAAX;AAAc,UAAA,EAAE,EAAE,CAAlB;AAAqB,UAAA,EAAE,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAYE,QAAC,GAAD;AAAA,gCACA,QAAC,GAAD;AAAK,UAAA,IAAI,EAAE,CAAX;AAAc,UAAA,EAAE,EAAE,CAAlB;AAAqB,UAAA,EAAE,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,GAAD;AAAK,UAAA,IAAI,EAAE,CAAX;AAAc,UAAA,EAAE,EAAE,EAAlB;AAAsB,UAAA,EAAE,EAAE,CAA1B;AAAA,iCACA,QAAC,WAAD;AAAA,mCACA,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,aAAtB;AAAA,sCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,SAAS,MADX;AAEE,gBAAA,IAAI,EAAC,UAFP;AAGE,gBAAA,KAAK,EAAET,YAHT;AAIE,gBAAA,QAAQ,EAAG4B,CAAD,IAAO3B,cAAc,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV;AAJjC;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAeA,QAAC,GAAD;AAAK,UAAA,IAAI,EAAE,CAAX;AAAc,UAAA,EAAE,EAAE,CAAlB;AAAqB,UAAA,EAAE,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAfA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eA6BE,QAAC,GAAD;AAAA,gCACA,QAAC,GAAD;AAAK,UAAA,IAAI,EAAE,CAAX;AAAc,UAAA,EAAE,EAAE,CAAlB;AAAqB,UAAA,EAAE,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,GAAD;AAAK,UAAA,IAAI,EAAE,CAAX;AAAc,UAAA,EAAE,EAAE,EAAlB;AAAsB,UAAA,EAAE,EAAE,CAA1B;AAAA,iCACA,QAAC,WAAD;AAAA,mCACA,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,aAAtB;AAAA,sCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,IAAI,EAAC,UADP;AAEE,gBAAA,KAAK,EAAE5B,YAFT;AAGE,gBAAA,QAAQ,EAAG0B,CAAD,IAAOzB,cAAc,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV;AAHjC;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAcA,QAAC,GAAD;AAAK,UAAA,IAAI,EAAE,CAAX;AAAc,UAAA,EAAE,EAAE,CAAlB;AAAqB,UAAA,EAAE,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAdA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF,eA6CE,QAAC,GAAD;AAAA,gCACA,QAAC,GAAD;AAAK,UAAA,IAAI,EAAE,CAAX;AAAc,UAAA,EAAE,EAAE,CAAlB;AAAqB,UAAA,EAAE,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,GAAD;AAAK,UAAA,IAAI,EAAE,CAAX;AAAc,UAAA,EAAE,EAAE,EAAlB;AAAsB,UAAA,EAAE,EAAE,CAA1B;AAAA,iCACA,QAAC,WAAD;AAAA,mCACA,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,mBAAtB;AAAA,sCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,IAAI,EAAC,UADP;AAEE,gBAAA,KAAK,EAAE1B,mBAFT;AAGE,gBAAA,QAAQ,EAAGwB,CAAD,IAAOvB,oBAAoB,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV;AAHvC;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAcA,QAAC,GAAD;AAAK,UAAA,IAAI,EAAE,CAAX;AAAc,UAAA,EAAE,EAAE,CAAlB;AAAqB,UAAA,EAAE,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAdA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7CF,eA6DE,QAAC,GAAD;AAAA,gCACA,QAAC,GAAD;AAAK,UAAA,IAAI,EAAE,CAAX;AAAc,UAAA,EAAE,EAAE,CAAlB;AAAqB,UAAA,EAAE,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,kBAAD;AACE,UAAA,OAAO,EAAC,SADV;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,QAAQ,EAAE,CAACvB,sBAAsB,EAHnC;AAIE,UAAA,OAAO,EAAEO,oBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7DF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6ED,CAjIM;;GAAMf,kB;UAMKX,U;;;MANLW,kB","sourcesContent":["import React, { useState, SyntheticEvent } from \"react\";\nimport axios from 'axios';\nimport styled from \"styled-components\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { device } from \"../../styles/devices\";\nimport { routes } from '../../util/config';\nimport { useHistory } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nconst StyledForm = styled(Form)`\n  margin: auto;\n  padding-top: 5%;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptopL} {\n    font-size: 16px; \n  }\n`;\n\nconst StyledInput = styled(Form.Group)`\n  // These are no longer needed but keeping in case we want to re-style inputs.\n  @media ${device.mobileS} {\n    width: 100%;\n  }\n  @media ${device.laptopL} {\n    width: 100%;\n  }\n`;\n\nconst StyledLabel = styled(Form.Label)`\n  color: white;\n  @media ${device.mobileS} {\n    font-size: 14px;\n  }\n\n  @media ${device.laptopL} {\n    font-size: 16px;\n  }\n`;\n\nconst StyledUpdateButton = styled(Button)` \n@media ${device.mobileS} {\n  font-size: 14px;\n}\n\n@media ${device.laptopL} {\n  font-size: 16px;\n}\n`;\n\nexport const UpdatePasswordForm = (): JSX.Element => {\n  //const [username, setUsername] = useState(\"\");\n  const [old_password, setOldPassword] = useState(\"\");\n  const [new_password, setNewPassword] = useState(\"\");\n  const [new_password_verify, setVerifyNewPassword] = useState(\"\");\n\n  const history = useHistory();\n\n  function validatePasswordChange(){\n    return (\n      /*username.length > 0 && */old_password.length > 0 && new_password.length > 0 && new_password === new_password_verify && new_password !== old_password\n    ); //makes sure the user enters something in each field and that the new password was typed correctly\n  }\n\n  function getUsername() {\n    if (sessionStorage.getItem('username') == null)\n    {\n      alert('Not logged in. Redirecting to login page...')\n      history.push('/');\n    }\n    return sessionStorage.getItem('username');\n  }\n\n  function handleUpdatePassword(event: SyntheticEvent){\n    event.preventDefault();\n\n    const newUserPassword = {\n      //username: username,\n      new_password: new_password,\n      old_password: old_password,\n      new_password_verify: new_password_verify,\n    };\n\n    const sendUpdateRequest = async () => {\n      try{\n        const resp = await axios.post(routes.updatePassword, newUserPassword, { withCredentials: true });\n        console.log(resp.data);\n        if (resp.data === \"Success\") {\n          alert(\"Password Update Successful!\");\n          history.push(\"/\");\n        } else if (resp.data === \"Failed\") {\n          alert(\"Sorry, wrong username or password. Please try again!\")\n        }\n      }catch (err) {\n        alert(\"Password change failed\");\n        // Handle Error Here\n        console.error(err);\n      }\n    };\n    sendUpdateRequest();\n  }\n \n  return (\n    <div className=\"UpdatePassword\"> \n      <StyledForm>\n      <Row>\n      <Col span={8} xs={6} md={8}></Col>\n      <Col span={8} xs={12} md={8}>\n      <StyledInput>\n        <Form.Group controlId=\"username\">\n          <StyledLabel>Username: {getUsername()}</StyledLabel>\n        </Form.Group>\n        </StyledInput>\n        </Col>\n        <Col span={8} xs={6} md={8}></Col>\n        </Row>\n        <Row>\n        <Col span={8} xs={6} md={8}></Col>\n        <Col span={8} xs={12} md={8}>\n        <StyledInput>\n        <Form.Group controlId=\"oldPassword\">\n          <StyledLabel>Old Password</StyledLabel>\n          <Form.Control \n            autoFocus\n            type=\"password\" \n            value={old_password} \n            onChange={(e) => setOldPassword(e.target.value)}\n          />\n        </Form.Group>\n        </StyledInput>\n        </Col>\n        <Col span={8} xs={6} md={8}></Col>\n        </Row>\n        <Row>\n        <Col span={8} xs={6} md={8}></Col>\n        <Col span={8} xs={12} md={8}>\n        <StyledInput>\n        <Form.Group controlId=\"newPassword\">\n          <StyledLabel>New Password</StyledLabel>\n          <Form.Control \n            type=\"password\" \n            value={new_password} \n            onChange={(e) => setNewPassword(e.target.value)}\n          />\n        </Form.Group>\n        </StyledInput>\n        </Col>\n        <Col span={8} xs={6} md={8}></Col>\n        </Row>\n        <Row>\n        <Col span={8} xs={6} md={8}></Col>\n        <Col span={8} xs={12} md={8}>\n        <StyledInput>\n        <Form.Group controlId=\"verifyNewPassword\">\n          <StyledLabel>Verify New Password</StyledLabel>\n          <Form.Control \n            type=\"password\" \n            value={new_password_verify} \n            onChange={(e) => setVerifyNewPassword(e.target.value)}\n          />\n        </Form.Group>\n        </StyledInput>\n        </Col>\n        <Col span={8} xs={6} md={8}></Col>\n        </Row>\n        <Row>\n        <Col span={8} xs={6} md={8}></Col>\n        <StyledUpdateButton \n          variant=\"success\"\n          type=\"submit\" \n          disabled={!validatePasswordChange()} \n          onClick={handleUpdatePassword}\n          >\n          Update\n        </StyledUpdateButton>\n        </Row>\n      </StyledForm>\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}